---
- hosts: all
  vars:
    openhim_core_version: v4.0.1
    openhim_console_version: v1.12.0
    sync_mediator_branch_or_tag: master
    datim_mediator_branch_or_tag: master
    file_queue_mediator_branch_or_tag: master
    openhim_root_password: openhim-password
    openhim_mediator_password: mediators-password
    allow_self_signed: true
  remote_user: root
  tasks:
  - name: add repo file
    template: src=mongo-repo.j2 dest=/etc/yum.repos.d/mongodb-org-3.4.repo
    tags: mongodb

  - name: install mongodb
    yum: name=mongodb-org state=present
    tags: mongodb

  - name: run mongodb
    service: name=mongod state=started enabled=yes
    tags: mongodb

  - name: get node 8 repo setup script
    get_url:
      url: https://rpm.nodesource.com/setup_8.x
      dest: /tmp/node-setup.sh
      mode: 0755
      timeout: 60
    tags: openhim

  - name: run node 8 repo setup script (only executed on first run)
    command: /tmp/node-setup.sh
    args:
      creates: /tmp/node-setup.sh_already-ran
    tags: openhim

  - name: install nodejs
    yum: name=nodejs state=present
    tags: openhim

  - name: downgrade npm to 4 as git clones fail when run as root under 5.x
    command: npm i -g npm@4
    tags: openhim

  - name: install the openhim-core rpm from a remote repo
    yum:
      name: https://github.com/jembi/openhim-core-js/releases/download/{{ openhim_core_version }}/openhim-core-{{ openhim_core_version }}.x86_64.rpm
      state: present
    tags: openhim

  - name: run openhim-core
    service: name=openhim-core state=started enabled=yes
    tags: openhim

  - name: creates openhim-console directory
    file: path=/usr/share/openhim-console state=directory
    tags: openhim

  - name: download openhim-console
    get_url:
      url: https://github.com/jembi/openhim-console/releases/download/{{ openhim_console_version }}/openhim-console-{{ openhim_console_version }}.tar.gz
      dest: /tmp/openim-console-{{ openhim_console_version }}.tar.gz
      timeout: 60
    tags: openhim

  - name: unarchive openhim-console
    unarchive:
      src: /tmp/openim-console-{{ openhim_console_version }}.tar.gz
      dest: /usr/share/openhim-console
      remote_src: yes
    tags: openhim

  - name: add repo file for nginx
    template: src=nginx-repo.j2 dest=/etc/yum.repos.d/nginx.repo
    tags: openhim

  - name: install nginx
    yum: name=nginx state=present
    tags: openhim

  - name: add nginx config
    template: src=nginx.j2 dest=/etc/nginx/nginx.conf
    tags: openhim

  - name: run nginx
    service: name=nginx state=started enabled=yes
    tags: openhim

  - name: reload nginx to make sure we have latest config
    service: name=nginx state=reloaded
    tags: openhim

  - name: creates openhim scripts directory
    file: path=/etc/openhim-setup state=directory
    tags: openhim-setup

  - name: copy load-data script to server
    template: src=load-initial-data.sh.j2 dest=/etc/openhim-setup/load-initial-data.sh mode=0755
    tags: openhim-setup

  - name: copy data file to server
    template: src=openhim-config.json.j2 dest=/etc/openhim-setup/openhim-config.json
    tags: openhim-setup

  - name: install jq for json data processing
    get_url:
      url: https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
      dest: /usr/bin/jq
      mode: 755
    tags: openhim-setup

  - name: load inital data for openhim (only executed on first run)
    command: /etc/openhim-setup/load-initial-data.sh
    args:
      creates: /etc/openhim-setup/load-initial-data.sh_already-ran
    tags: openhim-setup

  - name: download sync mediator
    get_url:
      url: https://github.com/jembi/openhim-mediator-openinfoman-dhis2-sync/archive/{{ sync_mediator_branch_or_tag }}.tar.gz
      dest: /tmp/sync-mediator.tar.gz
      timeout: 60
    tags: sync-mediator

  - name: creates sync mediator directory
    file: path=/usr/share/openhim-mediator-sync state=directory
    tags: openhim

  - name: unarchive sync mediator
    unarchive:
      src: /tmp/sync-mediator.tar.gz
      dest: /usr/share/openhim-mediator-sync
      extra_opts: --strip-components=1
      remote_src: yes
    tags: sync-mediator

  - name: add sync mediator config
    template: src=sync-mediator.conf.j2 dest=/usr/share/openhim-mediator-sync/config/default.json
    tags: sync-mediator

  - name: install sync mediator dependencies
    command: npm install chdir=/usr/share/openhim-mediator-sync
    tags: sync-mediator

  - name: build sync mediator
    command: npm run prepublish chdir=/usr/share/openhim-mediator-sync
    tags: sync-mediator

  - name: add sync mediator service
    template: src=openhim-mediator-sync.service.j2 dest=/etc/systemd/system/openhim-mediator-sync.service
    tags: sync-mediator

  - name: read new service
    command: systemctl daemon-reload
    tags: sync-mediator

  - name: run sync mediator
    service: name=openhim-mediator-sync state=started enabled=yes
    tags: sync-mediator

  - name: download datim mediator
    get_url:
      url: https://github.com/jembi/openhim-mediator-datim/archive/{{ datim_mediator_branch_or_tag }}.tar.gz
      dest: /tmp/datim-mediator.tar.gz
      timeout: 60
    tags: datim-mediator

  - name: creates datim mediator directory
    file: path=/usr/share/openhim-mediator-datim state=directory
    tags: openhim

  - name: unarchive datim mediator
    unarchive:
      src: /tmp/datim-mediator.tar.gz
      dest: /usr/share/openhim-mediator-datim
      extra_opts: --strip-components=1
      remote_src: yes
    tags: datim-mediator

  - name: add datim mediator config
    template: src=datim-mediator.conf.j2 dest=/usr/share/openhim-mediator-datim/config/config.json
    tags: datim-mediator

  - name: install datim mediator dependencies
    command: npm install chdir=/usr/share/openhim-mediator-datim
    tags: datim-mediator

  - name: add datim mediator service
    template: src=openhim-mediator-datim.service.j2 dest=/etc/systemd/system/openhim-mediator-datim.service
    tags: datim-mediator

  - name: read new service
    command: systemctl daemon-reload
    tags: datim-mediator

  - name: run datim mediator
    service: name=openhim-mediator-datim state=started enabled=yes
    tags: datim-mediator

  - name: download file-queue mediator
    get_url:
      url: https://github.com/jembi/openhim-mediator-file-queue/archive/{{ file_queue_mediator_branch_or_tag }}.tar.gz
      dest: /tmp/file-queue-mediator.tar.gz
      timeout: 60
    tags: file-queue-mediator

  - name: creates file-queue mediator directory
    file: path=/usr/share/openhim-mediator-file-queue state=directory
    tags: openhim

  - name: unarchive file-queue mediator
    unarchive:
      src: /tmp/file-queue-mediator.tar.gz
      dest: /usr/share/openhim-mediator-file-queue
      extra_opts: --strip-components=1
      remote_src: yes
    tags: file-queue-mediator

  - name: add file-queue mediator config
    template: src=file-queue-mediator.conf.j2 dest=/usr/share/openhim-mediator-file-queue/config/config.json
    tags: file-queue-mediator

  - name: install git for use in npm install
    yum: name=git state=present
    tags: file-queue-mediator

  - name: install file-queue mediator dependencies
    command: npm install chdir=/usr/share/openhim-mediator-file-queue
    tags: file-queue-mediator

  - name: add file-queue mediator service
    template: src=openhim-mediator-file-queue.service.j2 dest=/etc/systemd/system/openhim-mediator-file-queue.service
    tags: file-queue-mediator

  - name: read new service
    command: systemctl daemon-reload
    tags: file-queue-mediator

  - name: run file-queue mediator
    service: name=openhim-mediator-file-queue state=started enabled=yes
    tags: file-queue-mediator
